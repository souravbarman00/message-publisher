# Jenkins with Docker Compose Setup
version: '3.8'

services:
  jenkins:
    image: jenkins/jenkins:lts
    container_name: message-publisher-jenkins
    restart: unless-stopped
    
    # Ports
    ports:
      - "8080:8080"   # Jenkins web UI
      - "50000:50000" # Jenkins agent port
    
    # Environment variables
    environment:
      - JENKINS_OPTS=--httpPort=8080
      - JAVA_OPTS=-Djenkins.install.runSetupWizard=false -Xmx2g
    
    # Volumes for persistence and Docker access
    volumes:
      # Jenkins data persistence
      - jenkins_data:/var/jenkins_home
      
      # Docker socket for building images
      - /var/run/docker.sock:/var/run/docker.sock:ro
      
      # Docker binary access
      - /usr/bin/docker:/usr/bin/docker:ro
      
      # Docker images storage directory
      - ./docker-images:/var/jenkins/docker-images
      
      # Scripts directory
      - ./scripts:/var/jenkins/scripts
    
    # User configuration for Docker access
    user: "1000:999"  # Adjust based on your system's docker group ID
    
    # Health check
    healthcheck:
      test: ["CMD", "curl", "-f", "http://localhost:8080/login"]
      interval: 30s
      timeout: 10s
      retries: 5
      start_period: 60s

  # Optional: Jenkins agent for distributed builds
  jenkins-agent:
    image: jenkins/inbound-agent:latest
    container_name: message-publisher-jenkins-agent
    restart: unless-stopped
    depends_on:
      - jenkins
    environment:
      - JENKINS_URL=http://jenkins:8080
      - JENKINS_SECRET=${JENKINS_AGENT_SECRET:-}
      - JENKINS_AGENT_NAME=docker-agent
    volumes:
      - /var/run/docker.sock:/var/run/docker.sock:ro
      - /usr/bin/docker:/usr/bin/docker:ro
    profiles:
      - agents  # Only start with: docker-compose --profile agents up

volumes:
  jenkins_data:
    driver: local
    driver_opts:
      type: none
      o: bind
      device: ${PWD}/jenkins_home

networks:
  default:
    name: message-publisher-ci